volumes:
    static_files:
      name: thpsrun_static_files
    postgres_data:
      name: thpsrun_postgres_data
    node_modules:
      name: node_modules

services:
  postgres:
    container_name: postgres
    image: postgres:17.5-bookworm
    restart: unless-stopped
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - thpsrun

  django:
    container_name: django
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/start.sh server
    restart: unless-stopped
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - static_files:/app/static:rw
      - ../guides:/app/docs
    networks:
      - thpsrun

  react:
    container_name: react
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    tty: true
    depends_on:
      - django
      - postgres
    volumes:
      - ./frontend:/srv/app:rw
      - node_modules:/srv/app/node_modules:rw
    networks:
      - thpsrun

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - thpsrun

networks:
  thpsrun:
    driver: bridge
