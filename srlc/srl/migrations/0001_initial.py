# Generated by Django 5.1.1 on 2024-12-03 21:59

import django.db.models.deletion
import django_resized.forms
import srl.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Awards",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Award Name"
                    ),
                ),
                (
                    "image",
                    django_resized.forms.ResizedImageField(
                        crop=None,
                        force_format=None,
                        help_text="Note: Images must be at least 64px in size, must be a square (height and width must match), and the max filesize is 3MB.",
                        keep_meta=True,
                        null=True,
                        quality=-1,
                        scale=None,
                        size=[64, 64],
                        upload_to="srl/static/srl/imgs/awards",
                        validators=[srl.models.validate_image],
                        verbose_name="Image",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Award Description",
                    ),
                ),
                (
                    "unique",
                    models.BooleanField(
                        default=False,
                        help_text="When checked, this award will be given the 'unique' tag - enabling special effects for the award on the profile page.",
                        verbose_name="Unique Award",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Awards",
            },
        ),
        migrations.CreateModel(
            name="CountryCodes",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Country Code ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Country Name")),
            ],
            options={
                "verbose_name_plural": "Country Codes",
            },
        ),
        migrations.CreateModel(
            name="GameOverview",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="SRL Game ID",
                    ),
                ),
                ("name", models.CharField(max_length=35, verbose_name="Name")),
                ("abbr", models.CharField(max_length=20, verbose_name="Abbreviation")),
                ("release", models.DateField(verbose_name="Release Date")),
                ("boxart", models.URLField(verbose_name="Box Art URL")),
                (
                    "defaulttime",
                    models.CharField(max_length=20, verbose_name="Default Time"),
                ),
            ],
            options={
                "verbose_name_plural": "Game Overview",
            },
        ),
        migrations.CreateModel(
            name="NewRuns",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Run ID",
                    ),
                ),
                ("timeadded", models.DateTimeField(verbose_name="Time Added")),
            ],
            options={
                "verbose_name_plural": "Latest Runs",
            },
        ),
        migrations.CreateModel(
            name="NewWRs",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Run ID",
                    ),
                ),
                ("timeadded", models.DateTimeField(verbose_name="Time Added")),
            ],
            options={
                "verbose_name_plural": "Latest WRs",
            },
        ),
        migrations.CreateModel(
            name="Platforms",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Platform ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, verbose_name="Name")),
            ],
            options={
                "verbose_name_plural": "Platforms",
            },
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Series ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="Name")),
                ("url", models.URLField(verbose_name="URL")),
            ],
            options={
                "verbose_name_plural": "Series",
            },
        ),
        migrations.CreateModel(
            name="Categories",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Category ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                ("type", models.CharField(max_length=15, verbose_name="Type (IL/FG)")),
                ("url", models.URLField(verbose_name="URL")),
                (
                    "hidden",
                    models.BooleanField(default=False, verbose_name="Hide Category"),
                ),
                (
                    "game",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.gameoverview",
                        verbose_name="Linked Game",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Levels",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Level ID",
                    ),
                ),
                ("name", models.CharField(max_length=75, verbose_name="Name")),
                ("url", models.URLField(verbose_name="URL")),
                (
                    "game",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.gameoverview",
                        verbose_name="Linked Game",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Levels",
            },
        ),
        migrations.CreateModel(
            name="MainRuns",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Run ID",
                    ),
                ),
                (
                    "subcategory",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Subcategory Name",
                    ),
                ),
                (
                    "values",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Subcategory Values",
                    ),
                ),
                ("place", models.IntegerField(verbose_name="Placing")),
                ("url", models.URLField(verbose_name="URL")),
                ("video", models.URLField(blank=True, null=True, verbose_name="Video")),
                (
                    "date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Submitted Date"
                    ),
                ),
                (
                    "time",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="RTA Time"
                    ),
                ),
                (
                    "time_secs",
                    models.FloatField(
                        blank=True, null=True, verbose_name="RTA Time (Seconds)"
                    ),
                ),
                (
                    "timenl",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="LRT Time"
                    ),
                ),
                (
                    "timenl_secs",
                    models.FloatField(
                        blank=True, null=True, verbose_name="LRT Time (Seconds)"
                    ),
                ),
                (
                    "timeigt",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="IGT Time"
                    ),
                ),
                (
                    "timeigt_secs",
                    models.FloatField(
                        blank=True, null=True, verbose_name="IGT Time (Seconds)"
                    ),
                ),
                (
                    "points",
                    models.IntegerField(default=0, verbose_name="Packle Points"),
                ),
                (
                    "emulated",
                    models.BooleanField(default=False, verbose_name="Emulated?"),
                ),
                (
                    "obsolete",
                    models.BooleanField(
                        default=False,
                        help_text="When True, the run will be considered obsolete. Points will not count towards the player's total.",
                        verbose_name="Obsolete?",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.categories",
                        verbose_name="Category ID",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.gameoverview",
                        verbose_name="Game ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Main Runs",
            },
        ),
        migrations.CreateModel(
            name="MainRunTimeframe",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("start_date", models.DateTimeField(verbose_name="Approved Date")),
                ("end_date", models.DateTimeField(verbose_name="Beaten Date")),
                (
                    "points",
                    models.IntegerField(default=0, verbose_name="Packle Points"),
                ),
                (
                    "run_id",
                    models.ForeignKey(
                        max_length=10,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.mainruns",
                        verbose_name="Run ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Main Run Timeframes",
            },
        ),
        migrations.AddField(
            model_name="mainruns",
            name="timeframes",
            field=models.ManyToManyField(
                blank=True,
                default=False,
                help_text="This is a list of all the timeframes this run held certain point values; upon being beaten by that player or another, this is updated.",
                to="srl.mainruntimeframe",
                verbose_name="Run Timeframes",
            ),
        ),
        migrations.AddField(
            model_name="mainruns",
            name="platform",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="srl.platforms",
                verbose_name="Platform",
            ),
        ),
        migrations.AddField(
            model_name="gameoverview",
            name="platforms",
            field=models.ManyToManyField(to="srl.platforms", verbose_name="Platforms"),
        ),
        migrations.CreateModel(
            name="Players",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Player ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="Anonymous", max_length=30, verbose_name="Name"
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True,
                        help_text="This is a special field where, if a nickname is given, it will be shown versus their SRC name.",
                        max_length=30,
                        null=True,
                        verbose_name="Nickname",
                    ),
                ),
                ("url", models.URLField(verbose_name="URL")),
                (
                    "pfp",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Profile Picture URL",
                    ),
                ),
                (
                    "pronouns",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Pronouns"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "twitch",
                    models.CharField(
                        blank=True, max_length=75, null=True, verbose_name="Twitch"
                    ),
                ),
                (
                    "youtube",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="YouTube"
                    ),
                ),
                (
                    "twitter",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="Twitter"
                    ),
                ),
                (
                    "ex_stream",
                    models.BooleanField(
                        default=False,
                        help_text="When checked, this player can be filtered out from appearing on stream bots or pages.",
                        verbose_name="Stream Exception",
                    ),
                ),
                (
                    "awards",
                    models.ManyToManyField(
                        blank=True,
                        default=False,
                        help_text="Earned awards can be selected here. All selected awards will appear on the Player's profile.",
                        to="srl.awards",
                        verbose_name="Awards",
                    ),
                ),
                (
                    "countrycode",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.countrycodes",
                        verbose_name="Country Code",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Players",
            },
        ),
        migrations.AddField(
            model_name="mainruns",
            name="player",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="main_runs",
                to="srl.players",
                verbose_name="Player ID",
            ),
        ),
        migrations.AddField(
            model_name="mainruns",
            name="player2",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="main_runs_p2",
                to="srl.players",
                verbose_name="Player 2 ID",
            ),
        ),
        migrations.CreateModel(
            name="ILRuns",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Run ID",
                    ),
                ),
                (
                    "subcategory",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Subcategory Name",
                    ),
                ),
                (
                    "values",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Subcategory Values",
                    ),
                ),
                ("place", models.IntegerField(verbose_name="Placing")),
                ("url", models.URLField(verbose_name="URL")),
                ("video", models.URLField(blank=True, null=True, verbose_name="Video")),
                (
                    "date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Submitted Date"
                    ),
                ),
                (
                    "time",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="RTA Time"
                    ),
                ),
                (
                    "time_secs",
                    models.FloatField(
                        blank=True, null=True, verbose_name="RTA Time (Seconds)"
                    ),
                ),
                (
                    "timenl",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="LRT Time"
                    ),
                ),
                (
                    "timenl_secs",
                    models.FloatField(
                        blank=True, null=True, verbose_name="LRT Time (Seconds)"
                    ),
                ),
                (
                    "timeigt",
                    models.CharField(
                        blank=True, max_length=25, null=True, verbose_name="IGT Time"
                    ),
                ),
                (
                    "timeigt_secs",
                    models.FloatField(
                        blank=True, null=True, verbose_name="IGT Time (Seconds)"
                    ),
                ),
                (
                    "points",
                    models.IntegerField(default=0, verbose_name="Packle Points"),
                ),
                (
                    "emulated",
                    models.BooleanField(default=False, verbose_name="Emulated?"),
                ),
                (
                    "obsolete",
                    models.BooleanField(
                        default=False,
                        help_text="When True, the run will be considered obsolete. Points will not count towards the player's total.",
                        verbose_name="Obsolete?",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.categories",
                        verbose_name="Category ID",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.gameoverview",
                        verbose_name="Game ID",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.levels",
                        verbose_name="Level ID",
                    ),
                ),
                (
                    "timeframes",
                    models.ManyToManyField(
                        blank=True,
                        default=False,
                        help_text="This is a list of all the timeframes this run held certain point values; upon being beaten by that player or another, this is updated.",
                        to="srl.mainruntimeframe",
                        verbose_name="Run Timeframes",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.platforms",
                        verbose_name="Platform",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.players",
                        verbose_name="Player ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "IL Runs",
            },
        ),
        migrations.CreateModel(
            name="Variables",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Variable ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                ("cat", models.CharField(max_length=10, verbose_name="Category ID")),
                (
                    "all_cats",
                    models.BooleanField(
                        default=False,
                        help_text='When checked, this means that the variable will work across all categories of the game in the "Game" field. Note: The "Linked Category" must be blank.',
                        verbose_name="All Categories",
                    ),
                ),
                (
                    "scope",
                    models.CharField(max_length=12, verbose_name="Scope (FG/IL)"),
                ),
                (
                    "hidden",
                    models.BooleanField(default=False, verbose_name="Hide Variables"),
                ),
                (
                    "game",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.gameoverview",
                        verbose_name="Linked Game",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Variables",
            },
        ),
        migrations.CreateModel(
            name="VariableValues",
            fields=[
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                (
                    "value",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Value ID",
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(default=False, verbose_name="Hide Value"),
                ),
                (
                    "var",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="srl.variables",
                        verbose_name="Linked Variable",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Variable Values",
            },
        ),
    ]
